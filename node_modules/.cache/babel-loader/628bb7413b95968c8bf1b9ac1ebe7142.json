{"ast":null,"code":"// storage token\nexport const tokenKey = 'token';\nexport const saveToken = token => {\n  localStorage.setItem(tokenKey, token);\n};\nexport const getToken = () => localStorage.getItem(tokenKey); // storage ranking\n\nconst STORAGE_KEY = 'ranking';\n\nconst readRankingList = () => {\n  if (!JSON.parse(localStorage.getItem(STORAGE_KEY))) {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify([]));\n  }\n\n  const rankingList = JSON.parse(localStorage.getItem(STORAGE_KEY));\n  const lastScore = -1;\n  return rankingList.sort((a, b) => a.score < b.score ? 1 : lastScore);\n};\n\nconst saveRanking = rank => localStorage.setItem(STORAGE_KEY, JSON.stringify(rank));\n\nexport const getRankingList = () => readRankingList();\nexport const addRanking = ranking => {\n  const rankingList = readRankingList();\n  saveRanking([...rankingList, ranking]);\n};\nexport const removeRanking = name => {\n  const rankingList = readRankingList();\n  saveRanking(rankingList.filter(ranking => ranking.name !== name));\n};","map":{"version":3,"names":["tokenKey","saveToken","token","localStorage","setItem","getToken","getItem","STORAGE_KEY","readRankingList","JSON","parse","stringify","rankingList","lastScore","sort","a","b","score","saveRanking","rank","getRankingList","addRanking","ranking","removeRanking","name","filter"],"sources":["/home/daniel/Documentos/TRYBE-PROJECTS/game-trivia/src/services/storage.js"],"sourcesContent":["// storage token\nexport const tokenKey = 'token';\nexport const saveToken = (token) => {\n  localStorage.setItem(tokenKey, token);\n};\nexport const getToken = () => localStorage.getItem(tokenKey);\n\n// storage ranking\nconst STORAGE_KEY = 'ranking';\n\nconst readRankingList = () => {\n  if (!JSON.parse(localStorage.getItem(STORAGE_KEY))) {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify([]));\n  }\n  const rankingList = JSON.parse(localStorage.getItem(STORAGE_KEY));\n  const lastScore = -1;\n  return rankingList.sort((a, b) => (a.score < b.score ? 1 : lastScore));\n};\n\nconst saveRanking = (rank) => localStorage.setItem(STORAGE_KEY, JSON.stringify(rank));\n\nexport const getRankingList = () => readRankingList();\n\nexport const addRanking = (ranking) => {\n  const rankingList = readRankingList();\n  saveRanking([...rankingList, ranking]);\n};\n\nexport const removeRanking = (name) => {\n  const rankingList = readRankingList();\n  saveRanking(rankingList\n    .filter((ranking) => ranking.name !== name));\n};\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,QAAQ,GAAG,OAAjB;AACP,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAW;EAClCC,YAAY,CAACC,OAAb,CAAqBJ,QAArB,EAA+BE,KAA/B;AACD,CAFM;AAGP,OAAO,MAAMG,QAAQ,GAAG,MAAMF,YAAY,CAACG,OAAb,CAAqBN,QAArB,CAAvB,C,CAEP;;AACA,MAAMO,WAAW,GAAG,SAApB;;AAEA,MAAMC,eAAe,GAAG,MAAM;EAC5B,IAAI,CAACC,IAAI,CAACC,KAAL,CAAWP,YAAY,CAACG,OAAb,CAAqBC,WAArB,CAAX,CAAL,EAAoD;IAClDJ,YAAY,CAACC,OAAb,CAAqBG,WAArB,EAAkCE,IAAI,CAACE,SAAL,CAAe,EAAf,CAAlC;EACD;;EACD,MAAMC,WAAW,GAAGH,IAAI,CAACC,KAAL,CAAWP,YAAY,CAACG,OAAb,CAAqBC,WAArB,CAAX,CAApB;EACA,MAAMM,SAAS,GAAG,CAAC,CAAnB;EACA,OAAOD,WAAW,CAACE,IAAZ,CAAiB,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAZ,GAAoB,CAApB,GAAwBJ,SAApD,CAAP;AACD,CAPD;;AASA,MAAMK,WAAW,GAAIC,IAAD,IAAUhB,YAAY,CAACC,OAAb,CAAqBG,WAArB,EAAkCE,IAAI,CAACE,SAAL,CAAeQ,IAAf,CAAlC,CAA9B;;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAMZ,eAAe,EAA5C;AAEP,OAAO,MAAMa,UAAU,GAAIC,OAAD,IAAa;EACrC,MAAMV,WAAW,GAAGJ,eAAe,EAAnC;EACAU,WAAW,CAAC,CAAC,GAAGN,WAAJ,EAAiBU,OAAjB,CAAD,CAAX;AACD,CAHM;AAKP,OAAO,MAAMC,aAAa,GAAIC,IAAD,IAAU;EACrC,MAAMZ,WAAW,GAAGJ,eAAe,EAAnC;EACAU,WAAW,CAACN,WAAW,CACpBa,MADS,CACDH,OAAD,IAAaA,OAAO,CAACE,IAAR,KAAiBA,IAD5B,CAAD,CAAX;AAED,CAJM"},"metadata":{},"sourceType":"module"}