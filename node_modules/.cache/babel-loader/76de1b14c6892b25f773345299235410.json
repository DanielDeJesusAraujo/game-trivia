{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Documentos/TRYBE-PROJECTS/game-trivia/src/components/Header.jsx\";\nimport React, { Component } from 'react';\nimport md5 from 'crypto-js/md5';\nimport PropTypes from 'prop-types';\nimport { FiSettings } from 'react-icons/fi';\nimport { FaStar } from 'react-icons/fa';\nimport { connect } from 'react-redux';\nimport { gravatarAction } from '../redux/actions';\nimport HeaderStyle from '../styles/headerStyles/HeaderStyle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Header extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      hashEmail: ''\n    };\n\n    this.handleClick = () => {\n      const {\n        history\n      } = this.props;\n      history.push('/settings');\n    };\n  }\n\n  componentDidMount() {\n    const {\n      email,\n      dispatch\n    } = this.props;\n    const hashEmail = md5(email).toString();\n    this.setState({\n      hashEmail\n    });\n    dispatch(gravatarAction(hashEmail));\n  }\n\n  render() {\n    const {\n      name,\n      score\n    } = this.props;\n    const {\n      hashEmail\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(HeaderStyle, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `https://www.gravatar.com/avatar/${hashEmail}`,\n        alt: \"gravatar img\",\n        \"data-testid\": \"header-profile-picture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        \"data-testid\": \"header-player-name\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FaStar, {\n        className: \"star-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Pontos:\", /*#__PURE__*/_jsxDEV(\"strong\", {\n          \"data-testid\": \"header-score\",\n          children: score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: this.handleClick,\n        children: /*#__PURE__*/_jsxDEV(FiSettings, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nHeader.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  dispatch: PropTypes.func.isRequired,\n  email: PropTypes.string.isRequired,\n  score: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  name: state.player.name,\n  score: state.player.score,\n  email: state.player.email\n});\n\nexport default connect(mapStateToProps)(Header);","map":{"version":3,"names":["React","Component","md5","PropTypes","FiSettings","FaStar","connect","gravatarAction","HeaderStyle","Header","state","hashEmail","handleClick","history","props","push","componentDidMount","email","dispatch","toString","setState","render","name","score","propTypes","shape","func","isRequired","string","number","mapStateToProps","player"],"sources":["/home/daniel/Documentos/TRYBE-PROJECTS/game-trivia/src/components/Header.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport md5 from 'crypto-js/md5';\nimport PropTypes from 'prop-types';\nimport { FiSettings } from 'react-icons/fi';\nimport { FaStar } from 'react-icons/fa';\nimport { connect } from 'react-redux';\nimport { gravatarAction } from '../redux/actions';\nimport HeaderStyle from '../styles/headerStyles/HeaderStyle';\n\nclass Header extends Component {\n  state = {\n    hashEmail: '',\n  };\n\n  componentDidMount() {\n    const { email, dispatch } = this.props;\n    const hashEmail = md5(email).toString();\n    this.setState({ hashEmail });\n    dispatch(gravatarAction(hashEmail));\n  }\n\n  handleClick = () => {\n    const { history } = this.props;\n    history.push('/settings');\n  };\n\n  render() {\n    const { name, score } = this.props;\n    const { hashEmail } = this.state;\n    return (\n      <HeaderStyle>\n        <img\n          src={ `https://www.gravatar.com/avatar/${hashEmail}` }\n          alt=\"gravatar img\"\n          data-testid=\"header-profile-picture\"\n        />\n        <span data-testid=\"header-player-name\">{name}</span>\n        <FaStar className=\"star-icon\" />\n        <span>\n          Pontos:\n          <strong data-testid=\"header-score\">{score}</strong>\n        </span>\n        <button type=\"button\" onClick={ this.handleClick }>\n          <FiSettings />\n        </button>\n\n      </HeaderStyle>\n    );\n  }\n}\n\nHeader.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  dispatch: PropTypes.func.isRequired,\n  email: PropTypes.string.isRequired,\n  score: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  name: state.player.name,\n  score: state.player.score,\n  email: state.player.email,\n});\n\nexport default connect(mapStateToProps)(Header);\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAOC,WAAP,MAAwB,oCAAxB;;;AAEA,MAAMC,MAAN,SAAqBR,SAArB,CAA+B;EAAA;IAAA;IAAA,KAC7BS,KAD6B,GACrB;MACNC,SAAS,EAAE;IADL,CADqB;;IAAA,KAY7BC,WAZ6B,GAYf,MAAM;MAClB,MAAM;QAAEC;MAAF,IAAc,KAAKC,KAAzB;MACAD,OAAO,CAACE,IAAR,CAAa,WAAb;IACD,CAf4B;EAAA;;EAK7BC,iBAAiB,GAAG;IAClB,MAAM;MAAEC,KAAF;MAASC;IAAT,IAAsB,KAAKJ,KAAjC;IACA,MAAMH,SAAS,GAAGT,GAAG,CAACe,KAAD,CAAH,CAAWE,QAAX,EAAlB;IACA,KAAKC,QAAL,CAAc;MAAET;IAAF,CAAd;IACAO,QAAQ,CAACX,cAAc,CAACI,SAAD,CAAf,CAAR;EACD;;EAODU,MAAM,GAAG;IACP,MAAM;MAAEC,IAAF;MAAQC;IAAR,IAAkB,KAAKT,KAA7B;IACA,MAAM;MAAEH;IAAF,IAAgB,KAAKD,KAA3B;IACA,oBACE,QAAC,WAAD;MAAA,wBACE;QACE,GAAG,EAAI,mCAAkCC,SAAU,EADrD;QAEE,GAAG,EAAC,cAFN;QAGE,eAAY;MAHd;QAAA;QAAA;QAAA;MAAA,QADF,eAME;QAAM,eAAY,oBAAlB;QAAA,UAAwCW;MAAxC;QAAA;QAAA;QAAA;MAAA,QANF,eAOE,QAAC,MAAD;QAAQ,SAAS,EAAC;MAAlB;QAAA;QAAA;QAAA;MAAA,QAPF,eAQE;QAAA,mCAEE;UAAQ,eAAY,cAApB;UAAA,UAAoCC;QAApC;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QARF,eAYE;QAAQ,IAAI,EAAC,QAAb;QAAsB,OAAO,EAAG,KAAKX,WAArC;QAAA,uBACE,QAAC,UAAD;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAZF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAmBD;;AAvC4B;;AA0C/BH,MAAM,CAACe,SAAP,GAAmB;EACjBX,OAAO,EAAEV,SAAS,CAACsB,KAAV,CAAgB;IACvBV,IAAI,EAAEZ,SAAS,CAACuB,IAAV,CAAeC;EADE,CAAhB,EAENA,UAHc;EAIjBT,QAAQ,EAAEf,SAAS,CAACuB,IAAV,CAAeC,UAJR;EAKjBV,KAAK,EAAEd,SAAS,CAACyB,MAAV,CAAiBD,UALP;EAMjBJ,KAAK,EAAEpB,SAAS,CAAC0B,MAAV,CAAiBF,UANP;EAOjBL,IAAI,EAAEnB,SAAS,CAACyB,MAAV,CAAiBD;AAPN,CAAnB;;AAUA,MAAMG,eAAe,GAAIpB,KAAD,KAAY;EAClCY,IAAI,EAAEZ,KAAK,CAACqB,MAAN,CAAaT,IADe;EAElCC,KAAK,EAAEb,KAAK,CAACqB,MAAN,CAAaR,KAFc;EAGlCN,KAAK,EAAEP,KAAK,CAACqB,MAAN,CAAad;AAHc,CAAZ,CAAxB;;AAMA,eAAeX,OAAO,CAACwB,eAAD,CAAP,CAAyBrB,MAAzB,CAAf"},"metadata":{},"sourceType":"module"}