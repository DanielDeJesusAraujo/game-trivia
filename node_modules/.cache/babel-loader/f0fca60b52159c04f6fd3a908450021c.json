{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Documentos/TRYBE-PROJECTS/game-trivia/src/pages/Feedback.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Header from '../components/Header';\nimport { clearScore } from '../redux/actions';\nimport MainFeedback from '../styles/feedbackStyles/MainFeedback';\nimport FooterFeedback from '../styles/feedbackStyles/FooterFeedback';\nimport LogoStyle from '../styles/LogoStyle';\nimport AvatarStyle from '../styles/feedbackStyles/Avatar';\nimport ContainerBox from '../styles/feedbackStyles/ContainerBox';\nimport ButtonStyle from '../styles/ButtonStyle';\nimport ContainerButton from '../styles/feedbackStyles/ContainerButton';\nimport { addRanking } from '../services/storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Feedback extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      name: '',\n      score: 0,\n      avatar: ''\n    };\n\n    this.handleClick = _ref => {\n      let {\n        target: {\n          name\n        }\n      } = _ref;\n      addRanking(this.state);\n      const {\n        history,\n        dispatch\n      } = this.props;\n      history.push(name);\n      dispatch(clearScore());\n    };\n  }\n\n  componentDidMount() {\n    const {\n      avatar,\n      name,\n      score\n    } = this.props;\n    const avatarImg = `https://www.gravatar.com/avatar/${avatar}`;\n    this.setState({\n      name,\n      score,\n      avatar: avatarImg\n    });\n  }\n\n  render() {\n    const {\n      assertions,\n      score,\n      history\n    } = this.props;\n    const {\n      avatar\n    } = this.state;\n    const THREE = 3;\n    return /*#__PURE__*/_jsxDEV(MainFeedback, {\n      \"data-testid\": \"feedback-text\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        history: history\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LogoStyle, {\n        className: \"logo-feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AvatarStyle, {\n        src: avatar,\n        alt: \"avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContainerBox, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          \"data-testid\": \"feedback-text\",\n          className: assertions >= THREE ? 'green' : 'red',\n          children: assertions >= THREE ? 'Well Done!' : 'Could be better...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          \"data-testid\": \"feedback-total-question\",\n          children: assertions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          \"data-testid\": \"feedback-total-score\",\n          children: score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContainerButton, {\n        children: [/*#__PURE__*/_jsxDEV(ButtonStyle, {\n          className: \"btn-ranking\",\n          type: \"button\",\n          onClick: this.handleClick,\n          \"data-testid\": \"btn-ranking\",\n          name: \"/ranking\",\n          children: \"Ranking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonStyle, {\n          type: \"button\",\n          onClick: this.handleClick,\n          \"data-testid\": \"btn-play-again\",\n          name: \"/game-trivia\",\n          children: \"Play Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FooterFeedback, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nFeedback.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  assertions: PropTypes.number.isRequired,\n  score: PropTypes.number.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  assertions: state.player.assertions,\n  score: state.player.score,\n  avatar: state.player.gravatarEmail,\n  name: state.player.name\n});\n\nexport default connect(mapStateToProps)(Feedback);","map":{"version":3,"names":["React","Component","PropTypes","connect","Header","clearScore","MainFeedback","FooterFeedback","LogoStyle","AvatarStyle","ContainerBox","ButtonStyle","ContainerButton","addRanking","Feedback","state","name","score","avatar","handleClick","target","history","dispatch","props","push","componentDidMount","avatarImg","setState","render","assertions","THREE","propTypes","shape","func","isRequired","number","string","mapStateToProps","player","gravatarEmail"],"sources":["/home/daniel/Documentos/TRYBE-PROJECTS/game-trivia/src/pages/Feedback.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Header from '../components/Header';\nimport { clearScore } from '../redux/actions';\nimport MainFeedback from '../styles/feedbackStyles/MainFeedback';\nimport FooterFeedback from '../styles/feedbackStyles/FooterFeedback';\nimport LogoStyle from '../styles/LogoStyle';\nimport AvatarStyle from '../styles/feedbackStyles/Avatar';\nimport ContainerBox from '../styles/feedbackStyles/ContainerBox';\nimport ButtonStyle from '../styles/ButtonStyle';\nimport ContainerButton from '../styles/feedbackStyles/ContainerButton';\nimport { addRanking } from '../services/storage';\n\nclass Feedback extends Component {\n  state = {\n    name: '',\n    score: 0,\n    avatar: '',\n  };\n\n  componentDidMount() {\n    const { avatar, name, score } = this.props;\n    const avatarImg = `https://www.gravatar.com/avatar/${avatar}`;\n    this.setState({ name, score, avatar: avatarImg });\n  }\n\n  handleClick = ({ target: { name } }) => {\n    addRanking(this.state);\n    const { history, dispatch } = this.props;\n    history.push(name);\n    dispatch(clearScore());\n  };\n\n  render() {\n    const { assertions, score, history } = this.props;\n    const { avatar } = this.state;\n    const THREE = 3;\n    return (\n      <MainFeedback data-testid=\"feedback-text\">\n        <Header history={ history } />\n        <LogoStyle className=\"logo-feedback\" />\n        <AvatarStyle src={ avatar } alt=\"avatar\" />\n        <ContainerBox>\n          <h2\n            data-testid=\"feedback-text\"\n            className={ assertions >= THREE ? 'green' : 'red' }\n          >\n            { assertions >= THREE ? 'Well Done!' : 'Could be better...' }\n          </h2>\n          <strong data-testid=\"feedback-total-question\">{ assertions }</strong>\n          <span data-testid=\"feedback-total-score\">{ score }</span>\n        </ContainerBox>\n        <ContainerButton>\n          <ButtonStyle\n            className=\"btn-ranking\"\n            type=\"button\"\n            onClick={ this.handleClick }\n            data-testid=\"btn-ranking\"\n            name=\"/ranking\"\n          >\n            Ranking\n          </ButtonStyle>\n          <ButtonStyle\n            type=\"button\"\n            onClick={ this.handleClick }\n            data-testid=\"btn-play-again\"\n            name=\"/game-trivia\"\n          >\n            Play Again\n          </ButtonStyle>\n        </ContainerButton>\n        <FooterFeedback />\n      </MainFeedback>\n    );\n  }\n}\n\nFeedback.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  assertions: PropTypes.number.isRequired,\n  score: PropTypes.number.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  assertions: state.player.assertions,\n  score: state.player.score,\n  avatar: state.player.gravatarEmail,\n  name: state.player.name,\n});\n\nexport default connect(mapStateToProps)(Feedback);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}