{"ast":null,"code":"import _regeneratorRuntime from\"/home/daniel/Documentos/TRYBE-PROJECTS/game-trivia/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/daniel/Documentos/TRYBE-PROJECTS/game-trivia/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _classCallCheck from\"/home/daniel/Documentos/TRYBE-PROJECTS/game-trivia/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/daniel/Documentos/TRYBE-PROJECTS/game-trivia/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/home/daniel/Documentos/TRYBE-PROJECTS/game-trivia/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/home/daniel/Documentos/TRYBE-PROJECTS/game-trivia/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React,{Component}from'react';import{connect}from'react-redux';import Header from'../components/Header';import fetchTrivia from'../services/fetchTrivia';import Questions from'../components/Questions';import MainGame from'../styles/gameStyles/MainGame';import FooterGame from'../styles/gameStyles/FooterGame';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Game=/*#__PURE__*/function(_Component){_inherits(Game,_Component);var _super=_createSuper(Game);function Game(){var _this;_classCallCheck(this,Game);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={questions:[],indexQuestion:0};_this.handleNext=function(){var _this$state=_this.state,indexQuestion=_this$state.indexQuestion,questions=_this$state.questions;var history=_this.props.history;if(indexQuestion<questions.length-1){_this.setState(function(prevState){return{indexQuestion:prevState.indexQuestion+1};});}else history.push('/feedback');};return _this;}_createClass(Game,[{key:\"componentDidMount\",value:function(){var _componentDidMount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var url,data,invalidToken,validationToken,history;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:url=this.props.url;_context.next=3;return fetchTrivia(url);case 3:data=_context.sent;invalidToken=3;validationToken=data.response_code===invalidToken;if(validationToken){history=this.props.history;localStorage.removeItem('token');history.push('/');}else{this.setState({questions:data.results});}case 7:case\"end\":return _context.stop();}}},_callee,this);}));function componentDidMount(){return _componentDidMount.apply(this,arguments);}return componentDidMount;}()},{key:\"render\",value:function render(){var _this$state2=this.state,questions=_this$state2.questions,indexQuestion=_this$state2.indexQuestion;var history=this.props.history;return/*#__PURE__*/_jsxs(MainGame,{children:[/*#__PURE__*/_jsx(Header,{history:history}),questions.length>0&&/*#__PURE__*/_jsx(Questions,{handleNext:this.handleNext,question:questions[indexQuestion]}),/*#__PURE__*/_jsx(FooterGame,{})]});}}]);return Game;}(Component);var mapStateToProps=function mapStateToProps(state){return{url:state.fetch.url};};export default connect(mapStateToProps)(Game);","map":{"version":3,"names":["React","Component","connect","Header","fetchTrivia","Questions","MainGame","FooterGame","Game","state","questions","indexQuestion","handleNext","history","props","length","setState","prevState","push","url","data","invalidToken","validationToken","response_code","localStorage","removeItem","results","mapStateToProps","fetch"],"sources":["/home/daniel/Documentos/TRYBE-PROJECTS/game-trivia/src/pages/Game.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport fetchTrivia from '../services/fetchTrivia';\nimport Questions from '../components/Questions';\nimport MainGame from '../styles/gameStyles/MainGame';\nimport FooterGame from '../styles/gameStyles/FooterGame';\n\nclass Game extends Component {\n  state = {\n    questions: [],\n    indexQuestion: 0,\n  };\n\n  async componentDidMount() {\n    const { url } = this.props;\n    const data = await fetchTrivia(url);\n    const invalidToken = 3;\n    const validationToken = data.response_code === invalidToken;\n    if (validationToken) {\n      const { history } = this.props;\n      localStorage.removeItem('token');\n      history.push('/');\n    } else {\n      this.setState({ questions: data.results });\n    }\n  }\n\n  handleNext = () => {\n    const { indexQuestion, questions } = this.state;\n    const { history } = this.props;\n    if (indexQuestion < questions.length - 1) {\n      this.setState((prevState) => ({\n        indexQuestion: prevState.indexQuestion + 1,\n      }));\n    } else history.push('/feedback');\n  };\n\n  render() {\n    const { questions, indexQuestion } = this.state;\n    const { history } = this.props;\n    return (\n      <MainGame>\n        <Header history={ history } />\n        { questions.length > 0 && (\n          <Questions\n            handleNext={ this.handleNext }\n            question={ questions[indexQuestion] }\n          />) }\n        <FooterGame />\n      </MainGame>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  url: state.fetch.url,\n});\n\nGame.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  url: PropTypes.string.isRequired,\n};\n\nexport default connect(mapStateToProps)(Game);\n"],"mappings":"gzBAAA,MAAOA,MAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA,MAAOC,OAAP,KAAmB,sBAAnB,CACA,MAAOC,YAAP,KAAwB,yBAAxB,CACA,MAAOC,UAAP,KAAsB,yBAAtB,CACA,MAAOC,SAAP,KAAqB,+BAArB,CACA,MAAOC,WAAP,KAAuB,iCAAvB,C,2FAEMC,K,mTACJC,K,CAAQ,CACNC,SAAS,CAAE,EADL,CAENC,aAAa,CAAE,CAFT,C,OAmBRC,U,CAAa,UAAM,CACjB,gBAAqC,MAAKH,KAA1C,CAAQE,aAAR,aAAQA,aAAR,CAAuBD,SAAvB,aAAuBA,SAAvB,CACA,GAAQG,QAAR,CAAoB,MAAKC,KAAzB,CAAQD,OAAR,CACA,GAAIF,aAAa,CAAGD,SAAS,CAACK,MAAV,CAAmB,CAAvC,CAA0C,CACxC,MAAKC,QAAL,CAAc,SAACC,SAAD,QAAgB,CAC5BN,aAAa,CAAEM,SAAS,CAACN,aAAV,CAA0B,CADb,CAAhB,EAAd,EAGD,CAJD,IAIOE,QAAO,CAACK,IAAR,CAAa,WAAb,EACR,C,6JAtBD,uLACUC,GADV,CACkB,KAAKL,KADvB,CACUK,GADV,uBAEqBf,YAAW,CAACe,GAAD,CAFhC,QAEQC,IAFR,eAGQC,YAHR,CAGuB,CAHvB,CAIQC,eAJR,CAI0BF,IAAI,CAACG,aAAL,GAAuBF,YAJjD,CAKE,GAAIC,eAAJ,CAAqB,CACXT,OADW,CACC,KAAKC,KADN,CACXD,OADW,CAEnBW,YAAY,CAACC,UAAb,CAAwB,OAAxB,EACAZ,OAAO,CAACK,IAAR,CAAa,GAAb,EACD,CAJD,IAIO,CACL,KAAKF,QAAL,CAAc,CAAEN,SAAS,CAAEU,IAAI,CAACM,OAAlB,CAAd,EACD,CAXH,2D,mIAwBA,iBAAS,CACP,iBAAqC,KAAKjB,KAA1C,CAAQC,SAAR,cAAQA,SAAR,CAAmBC,aAAnB,cAAmBA,aAAnB,CACA,GAAQE,QAAR,CAAoB,KAAKC,KAAzB,CAAQD,OAAR,CACA,mBACE,MAAC,QAAD,yBACE,KAAC,MAAD,EAAQ,OAAO,CAAGA,OAAlB,EADF,CAEIH,SAAS,CAACK,MAAV,CAAmB,CAAnB,eACA,KAAC,SAAD,EACE,UAAU,CAAG,KAAKH,UADpB,CAEE,QAAQ,CAAGF,SAAS,CAACC,aAAD,CAFtB,EAHJ,cAOE,KAAC,UAAD,IAPF,GADF,CAWD,C,kBA5CgBV,S,EA+CnB,GAAM0B,gBAAe,CAAG,QAAlBA,gBAAkB,CAAClB,KAAD,QAAY,CAClCU,GAAG,CAAEV,KAAK,CAACmB,KAAN,CAAYT,GADiB,CAAZ,EAAxB,CAWA,cAAejB,QAAO,CAACyB,eAAD,CAAP,CAAyBnB,IAAzB,CAAf"},"metadata":{},"sourceType":"module"}