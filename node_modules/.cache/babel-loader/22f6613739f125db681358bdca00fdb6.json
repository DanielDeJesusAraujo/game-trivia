{"ast":null,"code":"import _toConsumableArray from\"/home/daniel/Documentos/TRYBE-PROJECTS/game-trivia/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _classCallCheck from\"/home/daniel/Documentos/TRYBE-PROJECTS/game-trivia/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/daniel/Documentos/TRYBE-PROJECTS/game-trivia/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/home/daniel/Documentos/TRYBE-PROJECTS/game-trivia/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/home/daniel/Documentos/TRYBE-PROJECTS/game-trivia/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React,{Component}from'react';import{IoIosTimer}from'react-icons/io';import{connect}from'react-redux';import ButtonAnswer from'../styles/gameStyles/ButtonAnswer';import ContainerAnswer from'../styles/gameStyles/ContainerAnswer';import SectionGame from'../styles/gameStyles/SectionGame';import ContainerQuestion from'../styles/gameStyles/ContainerQuestion';import LogoStyle from'../styles/LogoStyle';import BoxQuestion from'../styles/gameStyles/BoxQuestion';import BoxCategory from'../styles/gameStyles/BoxCategory';import BoxTextQuestion from'../styles/gameStyles/BoxTextQuestion';import IconTrybe from'../styles/IconTrybe';import ButtonStyle from'../styles/ButtonStyle';import TimerComtent from'../styles/TimerStyle';import{rightAnswer,scoreAction}from'../redux/actions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Questions=/*#__PURE__*/function(_Component){_inherits(Questions,_Component);var _super=_createSuper(Questions);function Questions(){var _this;_classCallCheck(this,Questions);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={answerArray:[],answerCorrect:'',category:'',questionText:'',timer:30,buttonClicked:false};_this.timeToAnswer=function(){var oneSecond=1000;var _this$props=_this.props,dispatch=_this$props.dispatch,score=_this$props.score;var intervalTime=setInterval(function(){var timer=_this.state.timer;var timeLimit=0;if(timer===timeLimit){_this.setState({nextQuestion:true});dispatch(scoreAction(score));clearInterval(intervalTime);}else{_this.setState(function(prevState){return{timer:prevState.timer-1};});}},oneSecond);_this.setState({intervalTime:intervalTime});};_this.getListQuestions=function(){var _this$props$question=_this.props.question,correctAnswer=_this$props$question.correct_answer,incorrectAnswers=_this$props$question.incorrect_answers,category=_this$props$question.category,question=_this$props$question.question;var listQuestions=[].concat(_toConsumableArray(incorrectAnswers),[correctAnswer]);var answerArray=_this.shuffleArray(listQuestions);_this.setState({answerArray:answerArray,answerCorrect:correctAnswer,category:category,questionText:question});};_this.shuffleArray=function(arr){for(var i=arr.length-1;i>0;i-=1){var j=Math.floor(Math.random()*(i+1));var _ref=[arr[j],arr[i]];arr[i]=_ref[0];arr[j]=_ref[1];}return arr;};_this.sumScore=function(answer){var _this$props2=_this.props,_this$props2$question=_this$props2.question,correctAnswer=_this$props2$question.correct_answer,difficulty=_this$props2$question.difficulty,score=_this$props2.score;var timer=_this.state.timer;if(answer===correctAnswer){var dez=10;var hard=3;switch(difficulty){case'easy':return score+dez+timer*1;case'medium':return score+dez+timer*2;default:return score+dez+timer*hard;}}else return score;};_this.handleClick=function(_ref2){var name=_ref2.target.name;var dispatch=_this.props.dispatch;var answerCorrect=_this.state.answerCorrect;if(name===answerCorrect)dispatch(rightAnswer());_this.setState({nextQuestion:true,score:_this.sumScore(name)},function(){var score=_this.state.score;dispatch(scoreAction(score));});var intervalTime=_this.state.intervalTime;clearInterval(intervalTime);};_this.nextBtnClick=function(){var handleNext=_this.props.handleNext;handleNext();_this.setState({nextQuestion:false,timer:30,buttonClicked:true});_this.getListQuestions();_this.timeToAnswer();};return _this;}_createClass(Questions,[{key:\"componentDidMount\",value:function componentDidMount(){this.getListQuestions();this.timeToAnswer();}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){// alterei isso\nvar buttonClicked=this.state.buttonClicked;if(buttonClicked){this.getListQuestions();this.setState({buttonClicked:false});}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){var intervalTime=this.state.intervalTime;clearInterval(intervalTime);}},{key:\"render\",value:function render(){var _this2=this;var _this$state=this.state,answerArray=_this$state.answerArray,category=_this$state.category,questionText=_this$state.questionText,answerCorrect=_this$state.answerCorrect,nextQuestion=_this$state.nextQuestion,timer=_this$state.timer;return/*#__PURE__*/_jsxs(SectionGame,{children:[/*#__PURE__*/_jsxs(ContainerQuestion,{children:[/*#__PURE__*/_jsx(LogoStyle,{className:\"logoTrivia\"}),/*#__PURE__*/_jsxs(BoxQuestion,{children:[/*#__PURE__*/_jsx(BoxCategory,{\"data-testid\":\"question-category\",children:category}),/*#__PURE__*/_jsx(BoxTextQuestion,{\"data-testid\":\"question-text\",children:questionText}),/*#__PURE__*/_jsxs(TimerComtent,{children:[/*#__PURE__*/_jsx(IoIosTimer,{}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Tempo:\",' ',timer,\"s\"]})]})]}),/*#__PURE__*/_jsx(IconTrybe,{})]}),/*#__PURE__*/_jsxs(ContainerAnswer,{\"data-testid\":\"answer-options\",children:[answerArray===null||answerArray===void 0?void 0:answerArray.map(function(answer,index){return answer===answerCorrect?/*#__PURE__*/_jsx(ButtonAnswer,{type:\"button\",\"data-testid\":\"correct-answer\",onClick:_this2.handleClick,className:nextQuestion&&'correctAnswer',disabled:nextQuestion,name:answer,children:answer},\"correct-answer-\".concat(index)):/*#__PURE__*/_jsx(ButtonAnswer,{type:\"button\",\"data-testid\":\"wrong-answer-\".concat(index),onClick:_this2.handleClick,className:nextQuestion&&'wrongAnswer',disabled:nextQuestion,name:answer,children:answer},\"wrong-answer-\".concat(index));}),nextQuestion&&/*#__PURE__*/_jsx(ButtonStyle,{\"data-testid\":\"btn-next\",onClick:this.nextBtnClick,children:\"Next\"})]})]});}}]);return Questions;}(Component);var mapStateToProps=function mapStateToProps(state){return{score:state.player.score};};export default connect(mapStateToProps)(Questions);","map":{"version":3,"names":["React","Component","IoIosTimer","connect","ButtonAnswer","ContainerAnswer","SectionGame","ContainerQuestion","LogoStyle","BoxQuestion","BoxCategory","BoxTextQuestion","IconTrybe","ButtonStyle","TimerComtent","rightAnswer","scoreAction","Questions","state","answerArray","answerCorrect","category","questionText","timer","buttonClicked","timeToAnswer","oneSecond","props","dispatch","score","intervalTime","setInterval","timeLimit","setState","nextQuestion","clearInterval","prevState","getListQuestions","question","correctAnswer","correct_answer","incorrectAnswers","incorrect_answers","listQuestions","shuffleArray","arr","i","length","j","Math","floor","random","sumScore","answer","difficulty","dez","hard","handleClick","name","target","nextBtnClick","handleNext","map","index","mapStateToProps","player"],"sources":["/home/daniel/Documentos/TRYBE-PROJECTS/game-trivia/src/components/Questions.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { IoIosTimer } from 'react-icons/io';\nimport { connect } from 'react-redux';\nimport ButtonAnswer from '../styles/gameStyles/ButtonAnswer';\nimport ContainerAnswer from '../styles/gameStyles/ContainerAnswer';\nimport SectionGame from '../styles/gameStyles/SectionGame';\nimport ContainerQuestion from '../styles/gameStyles/ContainerQuestion';\nimport LogoStyle from '../styles/LogoStyle';\nimport BoxQuestion from '../styles/gameStyles/BoxQuestion';\nimport BoxCategory from '../styles/gameStyles/BoxCategory';\nimport BoxTextQuestion from '../styles/gameStyles/BoxTextQuestion';\nimport IconTrybe from '../styles/IconTrybe';\nimport ButtonStyle from '../styles/ButtonStyle';\nimport TimerComtent from '../styles/TimerStyle';\nimport { rightAnswer, scoreAction } from '../redux/actions';\n\nclass Questions extends Component {\n  state = {\n    answerArray: [],\n    answerCorrect: '',\n    category: '',\n    questionText: '',\n    timer: 30,\n    buttonClicked: false,\n  };\n\n  componentDidMount() {\n    this.getListQuestions();\n    this.timeToAnswer();\n  }\n\n  componentDidUpdate() { // alterei isso\n    const { buttonClicked } = this.state;\n    if (buttonClicked) {\n      this.getListQuestions();\n      this.setState({ buttonClicked: false });\n    }\n  }\n\n  componentWillUnmount() {\n    const { intervalTime } = this.state;\n    clearInterval(intervalTime);\n  }\n\n  timeToAnswer = () => {\n    const oneSecond = 1000;\n    const { dispatch, score } = this.props;\n    const intervalTime = setInterval(() => {\n      const { timer } = this.state;\n      const timeLimit = 0;\n      if (timer === timeLimit) {\n        this.setState({ nextQuestion: true });\n        dispatch(scoreAction(score));\n        clearInterval(intervalTime);\n      } else {\n        this.setState((prevState) => ({ timer: prevState.timer - 1 }));\n      }\n    }, oneSecond);\n\n    this.setState({ intervalTime });\n  };\n\n  getListQuestions = () => {\n    const { question:\n      { correct_answer: correctAnswer,\n        incorrect_answers: incorrectAnswers, category, question } } = this.props;\n    const listQuestions = [...incorrectAnswers, correctAnswer];\n    const answerArray = this.shuffleArray(listQuestions);\n    this.setState(\n      { answerArray, answerCorrect: correctAnswer, category, questionText: question },\n    );\n  };\n\n  shuffleArray = (arr) => {\n    for (let i = arr.length - 1; i > 0; i -= 1) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n  };\n\n  sumScore = (answer) => {\n    const { question: { correct_answer: correctAnswer, difficulty }, score } = this.props;\n    const { timer } = this.state;\n    if (answer === correctAnswer) {\n      const dez = 10;\n      const hard = 3;\n      switch (difficulty) {\n      case 'easy':\n        return score + dez + (timer * 1);\n      case 'medium':\n        return score + dez + (timer * 2);\n      default:\n        return score + dez + (timer * hard);\n      }\n    } else return score;\n  };\n\n  handleClick = ({ target: { name } }) => {\n    const { dispatch } = this.props;\n    const { answerCorrect } = this.state;\n    if (name === answerCorrect) dispatch(rightAnswer());\n    this.setState({ nextQuestion: true, score: this.sumScore(name) }, () => {\n      const { score } = this.state;\n      dispatch(scoreAction(score));\n    });\n    const { intervalTime } = this.state;\n    clearInterval(intervalTime);\n  };\n\n  nextBtnClick = () => {\n    const { handleNext } = this.props;\n    handleNext();\n    this.setState({ nextQuestion: false, timer: 30, buttonClicked: true });\n    this.getListQuestions();\n    this.timeToAnswer();\n  };\n\n  render() {\n    const {\n      answerArray,\n      category,\n      questionText,\n      answerCorrect,\n      nextQuestion, timer } = this.state;\n\n    return (\n      <SectionGame>\n        <ContainerQuestion>\n          <LogoStyle className=\"logoTrivia\" />\n          <BoxQuestion>\n            <BoxCategory data-testid=\"question-category\">{category}</BoxCategory>\n            <BoxTextQuestion data-testid=\"question-text\">{questionText}</BoxTextQuestion>\n            <TimerComtent>\n              <IoIosTimer />\n              <p>\n                Tempo:\n                {' '}\n                {timer}\n                s\n              </p>\n            </TimerComtent>\n          </BoxQuestion>\n          <IconTrybe />\n        </ContainerQuestion>\n        <ContainerAnswer data-testid=\"answer-options\">\n          { answerArray?.map((answer, index) => (answer === answerCorrect ? (\n            <ButtonAnswer\n              type=\"button\"\n              key={ `correct-answer-${index}` }\n              data-testid=\"correct-answer\"\n              onClick={ this.handleClick }\n              className={ nextQuestion && 'correctAnswer' }\n              disabled={ nextQuestion }\n              name={ answer }\n            >\n              { answer }\n            </ButtonAnswer>\n          ) : (\n            <ButtonAnswer\n              type=\"button\"\n              key={ `wrong-answer-${index}` }\n              data-testid={ `wrong-answer-${index}` }\n              onClick={ this.handleClick }\n              className={ nextQuestion && 'wrongAnswer' }\n              disabled={ nextQuestion }\n              name={ answer }\n            >\n              { answer }\n            </ButtonAnswer>\n          )))}\n          { nextQuestion && (\n            <ButtonStyle\n              data-testid=\"btn-next\"\n              onClick={ this.nextBtnClick }\n            >\n              Next\n            </ButtonStyle>\n          )}\n        </ContainerAnswer>\n      </SectionGame>\n    );\n  }\n}\n\nQuestions.propTypes = {\n  question: PropTypes.shape(PropTypes.object.isRequired).isRequired,\n  dispatch: PropTypes.func.isRequired,\n  score: PropTypes.number.isRequired,\n  handleNext: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  score: state.player.score,\n});\n\nexport default connect(mapStateToProps)(Questions);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}