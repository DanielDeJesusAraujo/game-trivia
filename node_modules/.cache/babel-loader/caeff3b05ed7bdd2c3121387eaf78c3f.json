{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Documentos/TRYBE-PROJECTS/game-trivia/src/pages/Settings.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { urlAction } from '../redux/actions';\nimport fetchCategories from '../services/fetchCategories';\nimport MainSettings from '../styles/settingsStyles/MainSettings';\nimport BodySettings from '../styles/settingsStyles/BodySettings';\nimport LogoStyle from '../styles/LogoStyle';\nimport SelectSettings from '../styles/settingsStyles/SelectSettings';\nimport ButtonStyle from '../styles/ButtonStyle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Settings extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      categories: []\n    };\n\n    this.onChange = _ref => {\n      let {\n        target: {\n          value,\n          name\n        }\n      } = _ref;\n      const {\n        categories\n      } = this.state;\n\n      switch (name) {\n        case 'categories':\n          return this.setState({\n            id: `&category=${categories.find(category => category.name === value).id}`\n          });\n\n        case 'difficulty':\n          return this.setState({\n            difficulty: `&difficulty=${value.toLowerCase()}`\n          });\n\n        default:\n          return this.setState({\n            type: `&type=${value === 'Multiple Choise' ? 'multiple' : 'boolean'}`\n          });\n      }\n    };\n\n    this.handleClick = () => {\n      this.urlFilterTrivia(this.state);\n    };\n\n    this.urlFilterTrivia = _ref2 => {\n      let {\n        id = '',\n        difficulty = '',\n        type = ''\n      } = _ref2;\n      const {\n        dispatch,\n        token,\n        history\n      } = this.props;\n      console.log(token);\n      const URL = `https://opentdb.com/api.php?amount=5&token=${token}${id}${difficulty}${type}`;\n      dispatch(urlAction(URL));\n      history.push('/');\n    };\n  }\n\n  async componentDidMount() {\n    const categories = await fetchCategories();\n    this.setState({\n      categories\n    });\n  }\n\n  render() {\n    const {\n      categories\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(BodySettings, {\n      children: [/*#__PURE__*/_jsxDEV(LogoStyle, {\n        className: \"logo-Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MainSettings, {\n        \"data-testid\": \"settings-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"configura\\xE7\\xF5es\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SelectSettings, {\n          className: \"select-settings\",\n          name: \"categories\",\n          onChange: this.onChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), categories === null || categories === void 0 ? void 0 : categories.map(_ref3 => {\n            let {\n              name,\n              id\n            } = _ref3;\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              name: id,\n              children: name\n            }, `category-id-${id}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SelectSettings, {\n          className: \"select-settings\",\n          name: \"difficulty\",\n          onChange: this.onChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Difficulty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Easy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Hard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SelectSettings, {\n          className: \"select-settings\",\n          name: \"type\",\n          onChange: this.onChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Multiple Choise\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"True/False\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonStyle, {\n          type: \"button\",\n          onClick: this.handleClick,\n          children: \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nSettings.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  dispatch: PropTypes.func.isRequired,\n  token: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  token: state.fetch.token\n});\n\nexport default connect(mapStateToProps)(Settings);","map":{"version":3,"names":["React","Component","connect","PropTypes","urlAction","fetchCategories","MainSettings","BodySettings","LogoStyle","SelectSettings","ButtonStyle","Settings","state","categories","onChange","target","value","name","setState","id","find","category","difficulty","toLowerCase","type","handleClick","urlFilterTrivia","dispatch","token","history","props","console","log","URL","push","componentDidMount","render","map","propTypes","shape","func","isRequired","string","mapStateToProps","fetch"],"sources":["/home/daniel/Documentos/TRYBE-PROJECTS/game-trivia/src/pages/Settings.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { urlAction } from '../redux/actions';\nimport fetchCategories from '../services/fetchCategories';\nimport MainSettings from '../styles/settingsStyles/MainSettings';\nimport BodySettings from '../styles/settingsStyles/BodySettings';\nimport LogoStyle from '../styles/LogoStyle';\nimport SelectSettings from '../styles/settingsStyles/SelectSettings';\nimport ButtonStyle from '../styles/ButtonStyle';\n\nclass Settings extends Component {\n  state = {\n    categories: [],\n  };\n\n  async componentDidMount() {\n    const categories = await fetchCategories();\n    this.setState({ categories });\n  }\n\n  onChange = ({ target: { value, name } }) => {\n    const { categories } = this.state;\n    switch (name) {\n    case 'categories':\n      return this.setState({ id: `&category=${categories\n        .find((category) => category.name === value).id}` });\n    case 'difficulty':\n      return this.setState({ difficulty: `&difficulty=${value.toLowerCase()}` });\n    default:\n      return this.setState(\n        { type: `&type=${value === 'Multiple Choise' ? 'multiple' : 'boolean'}` },\n      );\n    }\n  };\n\n  handleClick = () => {\n    this.urlFilterTrivia(this.state);\n  };\n\n  urlFilterTrivia = ({ id = '', difficulty = '', type = '' }) => {\n    const { dispatch, token, history } = this.props;\n    console.log(token);\n    const URL = `https://opentdb.com/api.php?amount=5&token=${token}${id}${difficulty}${type}`;\n    dispatch(urlAction(URL));\n    history.push('/');\n  };\n\n  render() {\n    const { categories } = this.state;\n    return (\n      <BodySettings>\n        <LogoStyle className=\"logo-Settings\" />\n        <MainSettings data-testid=\"settings-title\">\n          <h1>configurações</h1>\n          <SelectSettings\n            className=\"select-settings\"\n            name=\"categories\"\n            onChange={ this.onChange }\n          >\n            <option>\n              Category\n            </option>\n            {categories?.map(({ name, id }) => (\n              <option name={ id } key={ `category-id-${id}` }>\n                {name}\n              </option>\n            ))}\n          </SelectSettings>\n          <SelectSettings\n            className=\"select-settings\"\n            name=\"difficulty\"\n            onChange={ this.onChange }\n          >\n            <option>\n              Difficulty\n            </option>\n            <option>\n              Easy\n            </option>\n            <option>\n              Medium\n            </option>\n            <option>\n              Hard\n            </option>\n          </SelectSettings>\n          <SelectSettings\n            className=\"select-settings\"\n            name=\"type\"\n            onChange={ this.onChange }\n          >\n            <option>\n              Type\n            </option>\n            <option>\n              Multiple Choise\n            </option>\n            <option>\n              True/False\n            </option>\n          </SelectSettings>\n          <ButtonStyle type=\"button\" onClick={ this.handleClick }>\n            Play\n          </ButtonStyle>\n        </MainSettings>\n      </BodySettings>\n    );\n  }\n}\n\nSettings.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  dispatch: PropTypes.func.isRequired,\n  token: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  token: state.fetch.token,\n});\n\nexport default connect(mapStateToProps)(Settings);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}