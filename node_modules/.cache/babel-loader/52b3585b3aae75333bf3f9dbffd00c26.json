{"ast":null,"code":"import _regeneratorRuntime from\"/home/daniel/Documentos/TRYBE-PROJECTS/game-trivia/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/daniel/Documentos/TRYBE-PROJECTS/game-trivia/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _classCallCheck from\"/home/daniel/Documentos/TRYBE-PROJECTS/game-trivia/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/daniel/Documentos/TRYBE-PROJECTS/game-trivia/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/home/daniel/Documentos/TRYBE-PROJECTS/game-trivia/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/home/daniel/Documentos/TRYBE-PROJECTS/game-trivia/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React,{Component}from'react';import{connect}from'react-redux';import{urlAction}from'../redux/actions';import fetchCategories from'../services/fetchCategories';import MainSettings from'../styles/settingsStyles/MainSettings';import BodySettings from'../styles/settingsStyles/BodySettings';import LogoStyle from'../styles/LogoStyle';import SelectSettings from'../styles/settingsStyles/SelectSettings';import ButtonStyle from'../styles/ButtonStyle';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Settings=/*#__PURE__*/function(_Component){_inherits(Settings,_Component);var _super=_createSuper(Settings);function Settings(){var _this;_classCallCheck(this,Settings);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={categories:[]};_this.onChange=function(_ref){var _ref$target=_ref.target,value=_ref$target.value,name=_ref$target.name;var categories=_this.state.categories;switch(name){case'categories':return _this.setState({id:\"&category=\".concat(categories.find(function(category){return category.name===value;}).id)});case'difficulty':return _this.setState({difficulty:\"&difficulty=\".concat(value.toLowerCase())});default:return _this.setState({type:\"&type=\".concat(value==='Multiple Choise'?'multiple':'boolean')});}};_this.handleClick=function(){_this.urlFilterTrivia(_this.state);};_this.urlFilterTrivia=function(_ref2){var _ref2$id=_ref2.id,id=_ref2$id===void 0?'':_ref2$id,_ref2$difficulty=_ref2.difficulty,difficulty=_ref2$difficulty===void 0?'':_ref2$difficulty,_ref2$type=_ref2.type,type=_ref2$type===void 0?'':_ref2$type;var _this$props=_this.props,dispatch=_this$props.dispatch,token=_this$props.token,history=_this$props.history;console.log(token);var URL=\"https://opentdb.com/api.php?amount=5&token=\".concat(token).concat(id).concat(difficulty).concat(type);dispatch(urlAction(URL));history.push('/');};return _this;}_createClass(Settings,[{key:\"componentDidMount\",value:function(){var _componentDidMount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var categories;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetchCategories();case 2:categories=_context.sent;this.setState({categories:categories});case 4:case\"end\":return _context.stop();}}},_callee,this);}));function componentDidMount(){return _componentDidMount.apply(this,arguments);}return componentDidMount;}()},{key:\"render\",value:function render(){var categories=this.state.categories;return/*#__PURE__*/_jsxs(BodySettings,{children:[/*#__PURE__*/_jsx(LogoStyle,{className:\"logo-Settings\"}),/*#__PURE__*/_jsxs(MainSettings,{\"data-testid\":\"settings-title\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"configura\\xE7\\xF5es\"}),/*#__PURE__*/_jsxs(SelectSettings,{className:\"select-settings\",name:\"categories\",onChange:this.onChange,children:[/*#__PURE__*/_jsx(\"option\",{children:\"Category\"}),categories===null||categories===void 0?void 0:categories.map(function(_ref3){var name=_ref3.name,id=_ref3.id;return/*#__PURE__*/_jsx(\"option\",{name:id,children:name},\"category-id-\".concat(id));})]}),/*#__PURE__*/_jsxs(SelectSettings,{className:\"select-settings\",name:\"difficulty\",onChange:this.onChange,children:[/*#__PURE__*/_jsx(\"option\",{children:\"Difficulty\"}),/*#__PURE__*/_jsx(\"option\",{children:\"Easy\"}),/*#__PURE__*/_jsx(\"option\",{children:\"Medium\"}),/*#__PURE__*/_jsx(\"option\",{children:\"Hard\"})]}),/*#__PURE__*/_jsxs(SelectSettings,{className:\"select-settings\",name:\"type\",onChange:this.onChange,children:[/*#__PURE__*/_jsx(\"option\",{children:\"Type\"}),/*#__PURE__*/_jsx(\"option\",{children:\"Multiple Choise\"}),/*#__PURE__*/_jsx(\"option\",{children:\"True/False\"})]}),/*#__PURE__*/_jsx(ButtonStyle,{type:\"button\",onClick:this.handleClick,children:\"Play\"})]})]});}}]);return Settings;}(Component);var mapStateToProps=function mapStateToProps(state){return{token:state.fetch.token};};export default connect(mapStateToProps)(Settings);","map":{"version":3,"names":["React","Component","connect","urlAction","fetchCategories","MainSettings","BodySettings","LogoStyle","SelectSettings","ButtonStyle","Settings","state","categories","onChange","target","value","name","setState","id","find","category","difficulty","toLowerCase","type","handleClick","urlFilterTrivia","props","dispatch","token","history","console","log","URL","push","map","mapStateToProps","fetch"],"sources":["/home/daniel/Documentos/TRYBE-PROJECTS/game-trivia/src/pages/Settings.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { urlAction } from '../redux/actions';\nimport fetchCategories from '../services/fetchCategories';\nimport MainSettings from '../styles/settingsStyles/MainSettings';\nimport BodySettings from '../styles/settingsStyles/BodySettings';\nimport LogoStyle from '../styles/LogoStyle';\nimport SelectSettings from '../styles/settingsStyles/SelectSettings';\nimport ButtonStyle from '../styles/ButtonStyle';\n\nclass Settings extends Component {\n  state = {\n    categories: [],\n  };\n\n  async componentDidMount() {\n    const categories = await fetchCategories();\n    this.setState({ categories });\n  }\n\n  onChange = ({ target: { value, name } }) => {\n    const { categories } = this.state;\n    switch (name) {\n    case 'categories':\n      return this.setState({ id: `&category=${categories\n        .find((category) => category.name === value).id}` });\n    case 'difficulty':\n      return this.setState({ difficulty: `&difficulty=${value.toLowerCase()}` });\n    default:\n      return this.setState(\n        { type: `&type=${value === 'Multiple Choise' ? 'multiple' : 'boolean'}` },\n      );\n    }\n  };\n\n  handleClick = () => {\n    this.urlFilterTrivia(this.state);\n  };\n\n  urlFilterTrivia = ({ id = '', difficulty = '', type = '' }) => {\n    const { dispatch, token, history } = this.props;\n    console.log(token);\n    const URL = `https://opentdb.com/api.php?amount=5&token=${token}${id}${difficulty}${type}`;\n    dispatch(urlAction(URL));\n    history.push('/');\n  };\n\n  render() {\n    const { categories } = this.state;\n    return (\n      <BodySettings>\n        <LogoStyle className=\"logo-Settings\" />\n        <MainSettings data-testid=\"settings-title\">\n          <h1>configurações</h1>\n          <SelectSettings\n            className=\"select-settings\"\n            name=\"categories\"\n            onChange={ this.onChange }\n          >\n            <option>\n              Category\n            </option>\n            {categories?.map(({ name, id }) => (\n              <option name={ id } key={ `category-id-${id}` }>\n                {name}\n              </option>\n            ))}\n          </SelectSettings>\n          <SelectSettings\n            className=\"select-settings\"\n            name=\"difficulty\"\n            onChange={ this.onChange }\n          >\n            <option>\n              Difficulty\n            </option>\n            <option>\n              Easy\n            </option>\n            <option>\n              Medium\n            </option>\n            <option>\n              Hard\n            </option>\n          </SelectSettings>\n          <SelectSettings\n            className=\"select-settings\"\n            name=\"type\"\n            onChange={ this.onChange }\n          >\n            <option>\n              Type\n            </option>\n            <option>\n              Multiple Choise\n            </option>\n            <option>\n              True/False\n            </option>\n          </SelectSettings>\n          <ButtonStyle type=\"button\" onClick={ this.handleClick }>\n            Play\n          </ButtonStyle>\n        </MainSettings>\n      </BodySettings>\n    );\n  }\n}\n\nSettings.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  dispatch: PropTypes.func.isRequired,\n  token: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  token: state.fetch.token,\n});\n\nexport default connect(mapStateToProps)(Settings);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}